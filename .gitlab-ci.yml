stages:
  - compile
  - build
compile:
  image: node:latest
  stage: compile
  cache:
    paths:
      - node_modules/
  script:
    - yarn install --frozen-lock
    - yarn compile
    - yarn lint
build-version:
  image: docker:19.03.11
  stage: build
  variables:
    CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE: $CI_REGISTRY_IMAGE/cache:production-build
    CONTAINER_CACHE_PRODUCTION_IMAGE: $CI_REGISTRY_IMAGE/cache:production
    CONTAINER_PRODUCTION_IMAGE: $CI_REGISTRY_IMAGE/production:$CI_BUILD_TAG
  only:
    - /^(\w+\.\w+\.\w+)-(sprint\d+)(?>-((?>dev|fix|hotfix)\d+))?(?>\+(.*))?$/i
  services:
    - docker:19.03.8-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE || true
    - docker pull $CONTAINER_CACHE_PRODUCTION_IMAGE || true
  script:
    - docker build --target build --cache-from=$CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE --tag $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE --build-arg buildEnv=production --build-arg buildPath= .
    - docker push $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE
    - docker build --cache-from $CONTAINER_CACHE_PRODUCTION_IMAGE --cache-from $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE --tag $CONTAINER_PRODUCTION_IMAGE --tag $CONTAINER_CACHE_PRODUCTION_IMAGE --build-arg buildEnv=production --build-arg buildPath= .
    - docker push $CONTAINER_CACHE_PRODUCTION_IMAGE
    - docker push $CONTAINER_PRODUCTION_IMAGE
build-branch:
  image: docker:19.03.11
  stage: build
  variables:
    CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE: $CI_REGISTRY_IMAGE/cache:production-build
    CONTAINER_CACHE_PRODUCTION_IMAGE: $CI_REGISTRY_IMAGE/cache:production
  only:
    - master
  services:
    - docker:19.03.8-dind
  before_script:
    - export RELEASE_TIME=$(date +%s)
    - export CONTAINER_PRODUCTION_IMAGE=$CI_REGISTRY_IMAGE/production:$CI_COMMIT_BRANCH-$RELEASE_TIME-$CI_COMMIT_SHORT_SHA
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE || true
    - docker pull $CONTAINER_CACHE_PRODUCTION_IMAGE || true
  script:
    - docker build --target build --cache-from=$CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE --tag $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE --build-arg buildEnv=production --build-arg buildPath= .
    - docker push $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE
    - docker build --cache-from $CONTAINER_CACHE_PRODUCTION_IMAGE --cache-from $CONTAINER_CACHE_BUILD_PRODUCTION_IMAGE --tag $CONTAINER_PRODUCTION_IMAGE --tag $CONTAINER_CACHE_PRODUCTION_IMAGE --build-arg buildEnv=production --build-arg buildPath= .
    - docker push $CONTAINER_CACHE_PRODUCTION_IMAGE
    - docker push $CONTAINER_PRODUCTION_IMAGE
